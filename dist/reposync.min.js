// RepoSync Portable Plugin
(function (window) {
  class RepoSync {
    constructor(config = {}) {
      // Default configuration
      this.config = {
        container: config.container || "#reposync",
        scholarId: config.scholarId, // Required: researcher's Google Scholar ID
        apiEndpoint: config.apiEndpoint || "http://localhost:3001/publications", // Changed to local server
        theme: config.theme || "light",
        itemsPerPage: config.itemsPerPage || 10,
        title: config.title || "Publications",
        sortBy: config.sortBy || "year",
      };

      // Validate required config
      if (!this.config.scholarId) {
        console.error("RepoSync Error: Google Scholar ID is required");
        return;
      }

      // Initialize the plugin
      this.init();
    }

    init() {
      // Create container if it doesn't exist
      this.container = document.querySelector(this.config.container);
      if (!this.container) {
        this.container = document.createElement("div");
        this.container.id = this.config.container.replace("#", "");
        document.body.appendChild(this.container);
      }

      // Add default styles
      this.addStyles();

      // Render initial structure
      this.render();

      // Load publications
      this.loadPublications();
    }

    addStyles() {
      const styles = `
        .reposync-container {
            font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .reposync-header {
            margin-bottom: 20px;
        }
        .reposync-filters {
            margin-bottom: 20px;
        }
        .reposync-publication {
            padding: 15px;
            margin-bottom: 15px;
            border: 1px solid #eee;
            border-radius: 4px;
            background: white;
        }
        .reposync-title {
            font-size: 16px;
            color: #2563eb;
            margin-bottom: 8px;
        }
        .reposync-title a {
            color: #2563eb;
            text-decoration: none;
        }
        .reposync-title a:hover {
            text-decoration: underline;
        }
        .reposync-authors {
            font-size: 14px;
            color: #666;
            margin-bottom: 8px;
        }
        .reposync-venue {
            font-size: 14px;
            color: #444;
        }
        .reposync-year {
            font-weight: bold;
            color: #666;
        }
        .reposync-citations {
            font-size: 14px;
            color: #666;
        }
        .reposync-dark {
            background: #1a1a1a;
            color: #fff;
        }
        .reposync-dark .reposync-publication {
            border-color: #333;
            background: #242424;
        }
        .reposync-dark .reposync-title a {
            color: #60a5fa;
        }
        #reposync-sort {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
        }
      `;

      const styleSheet = document.createElement("style");
      styleSheet.textContent = styles;
      document.head.appendChild(styleSheet);
    }

    render() {
      this.container.innerHTML = `
        <div class="reposync-container ${
          this.config.theme === "dark" ? "reposync-dark" : ""
        }">
            <div class="reposync-header">
                <h2>${this.config.title}</h2>
            </div>
            <div class="reposync-filters">
                <select id="reposync-sort">
                    <option value="year">Sort by Year</option>
                    <option value="citations">Sort by Citations</option>
                    <option value="title">Sort by Title</option>
                </select>
            </div>
            <div id="reposync-publications"></div>
            <div id="reposync-pagination"></div>
        </div>
      `;

      // Add event listeners
      document
        .getElementById("reposync-sort")
        .addEventListener("change", (e) => {
          this.config.sortBy = e.target.value;
          this.loadPublications();
        });
    }

    async loadPublications() {
      try {
        // Show loading state
        document.getElementById("reposync-publications").innerHTML =
          "Loading publications...";

        // Updated to use our local server endpoint
        const response = await fetch(
          `${this.config.apiEndpoint}?author_id=${this.config.scholarId}`
        );
        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.error || "Failed to fetch publications");
        }

        if (data.articles) {
          // Format the publications data
          const publications = data.articles.map((article) => ({
            title: article.title || "",
            authors: article.authors || "",
            venue: article.publication || "",
            year: article.year || "",
            citations: article.cited_by?.value || 0,
            url: article.link || "#",
          }));
          this.renderPublications(publications);
        } else {
          throw new Error("No publications found");
        }
      } catch (error) {
        console.error("Error loading publications:", error);
        document.getElementById(
          "reposync-publications"
        ).innerHTML = `Error loading publications: ${error.message}. Please check your Google Scholar ID and try again.`;
      }
    }

    renderPublications(publications) {
      const container = document.getElementById("reposync-publications");

      if (!publications || publications.length === 0) {
        container.innerHTML = "No publications found.";
        return;
      }

      // Sort publications
      publications.sort((a, b) => {
        switch (this.config.sortBy) {
          case "year":
            return (b.year || 0) - (a.year || 0);
          case "citations":
            return (b.citations || 0) - (a.citations || 0);
          case "title":
            return (a.title || "").localeCompare(b.title || "");
          default:
            return 0;
        }
      });

      // Render publications
      container.innerHTML = publications
        .map(
          (pub) => `
            <div class="reposync-publication">
                <div class="reposync-title">
                    <a href="${pub.url}" target="_blank" rel="noopener noreferrer">${pub.title}</a>
                </div>
                <div class="reposync-authors">${pub.authors}</div>
                <div class="reposync-venue">${pub.venue}</div>
                <div class="reposync-year">${pub.year}</div>
                <div class="reposync-citations">Citations: ${pub.citations}</div>
            </div>
          `
        )
        .join("");
    }
  }

  // Make RepoSync available globally
  window.RepoSync = RepoSync;
})(window);
